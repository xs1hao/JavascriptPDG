<!DOCTYPE html>
<html>
<head>
    <title>Combination Inheritance Example</title>
    <script type="text/javascript">
        
        /**
         * 也叫 伪经典继承，指的是将 原型链 和 借用构造函数 的技术组合到一起；
         * 用这种继承方式的缺点是：
         * 在任何情况下，都会调用两次超类型构造函数；
         * **/
        function SuperType(name){
            this.name = name;
            this.colors = ["red", "blue", "green"];
        }
        
        SuperType.prototype.sayName = function(){
            console.log(this.name);
        };

        function SubType(name, age){  
            SuperType.call(this, name); // // 第二次调用 SuperType(); 这里是通过外部参数形式实现，并未直接在原型中定义；

            
            this.age = age;
        }

        SubType.prototype = new SuperType(); // 第二次调用 SuperType();
        
        SubType.prototype.sayAge = function(){
            console.log(this.age);
        };
        
        var instance1 = new SubType("Nicholas", 29);
        instance1.colors.push("black");
        console.log(instance1.colors);  //"red,blue,green,black"
        instance1.sayName();      //"Nicholas";
        instance1.sayAge();       //29
        
       
        var instance2 = new SubType("Greg", 27);
        console.log(instance2.colors);  //"red,blue,green"
        instance2.sayName();      //"Greg";
        instance2.sayAge();       //27
       
        
    </script>
</head>
<body>

</body>
</html>